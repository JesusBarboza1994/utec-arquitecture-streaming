version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test-topic:1:1,debezium-config:1:1,debezium-offsets:1:1,debezium-status:1:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_RETENTION_MS: 86400000
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  debezium:
    image: debezium/connect:1.9
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: debezium-connect
      CONFIG_STORAGE_TOPIC: debezium-config
      OFFSET_STORAGE_TOPIC: debezium-offsets
      STATUS_STORAGE_TOPIC: debezium-status
      CONNECT_REST_PORT: 8083
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      # Configuración de conexión a MySQL
      DATABASE_HOSTNAME: fake-database-grupo3-1.cfqay6u8sikg.us-east-1.rds.amazonaws.com
      DATABASE_PORT: 3306
      DATABASE_USER: admin
      DATABASE_PASSWORD: awsrdsgruop3fakerlaboratorio
      DATABASE_DBNAME: bd-grupo-3-v2
    depends_on:
      - kafka
    networks:
      - kafka-network

networks:
  kafka-network:

# services:
#   zookeeper:
#     image: wurstmeister/zookeeper:latest
#     ports:
#       - "2181:2181"
#     networks:
#       - kafka-network

#   kafka:
#     image: wurstmeister/kafka:latest
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_CREATE_TOPICS: "test-topic:1:1,debezium-config:1:1,debezium-offsets:1:1"
#     depends_on:
#       - zookeeper
#     networks:
#       - kafka-network
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock

#   debezium:
#     image: debezium/connect:1.9
#     ports:
#       - "8083:8083"
#     environment:
#       - DATABASE_HOSTNAME=fake-database-grupo3-1.cfqay6u8sikg.us-east-1.rds.amazonaws.com
#       - DATABASE_PORT=3306
#       - DATABASE_USER=admin
#       - DATABASE_PASSWORD=awsrdsgruop3fakerlaboratorio
#       - DATABASE_DBNAME=bd-grupo-3-v2
#       - TABLE_INCLUDE_LIST=Stock
#       - BOOTSTRAP_SERVERS=kafka:9092
#       - GROUP_ID=1
#       - CONFIG_STORAGE_TOPIC=debezium-config
#       - OFFSET_STORAGE_TOPIC=debezium-offsets
#       - STATUS_STORAGE_TOPIC=debezium-status
#     networks:
#       - kafka-network
#     depends_on:
#       - kafka
# networks:
#   kafka-network:
#     driver: bridge
# version: '3'

# services:
#   zookeeper:
#     image: wurstmeister/zookeeper:latest
#     ports:
#       - "2181:2181"

#   kafka:
#     image: confluentinc/cp-kafka:latest
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_CREATE_TOPICS: "test-topic:1:1,debezium-config:1:1,debezium-offset:1:1,debezium-status:1:1"
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock

#   mysql:
#     image: mysql:8.0
#     environment:
#       MYSQL_ROOT_PASSWORD: password
#       MYSQL_DATABASE: test
#       MYSQL_USER: admin
#       MYSQL_PASSWORD: password
#     ports:
#       - "3307:3307"

#   debezium:
#     image: debezium/connect:1.9
#     environment:
#       - DATABASE_HOSTNAME=mysql
#       - DATABASE_PORT=3307
#       - DATABASE_USER=admin
#       - DATABASE_PASSWORD=password
#       - DATABASE_DBNAME=test
#       - TABLE_WHITELIST=Stock
#       - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#       - CONFIG_STORAGE_TOPIC=debezium-config
#       - OFFSET_STORAGE_TOPIC=debezium-offset
#       - STATUS_STORAGE_TOPIC=debezium-status
#     depends_on:
#       - mysql
#       - kafka